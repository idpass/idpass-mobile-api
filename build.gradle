/*
 * Copyright 2019 Newlogic Impact Lab Pte. Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    // Define versions in a single place
    ext {
        // Sdk and tools
        compileSdkVersion = 28
        minSdkVersion = 16
        targetSdkVersion = 28

        // App dependencies
        gradleVersion = '3.4.2'
        kotlinVersion = '1.3.31'
        ktlintVersion = '0.30.0'
        ktxVersion = '1.0.2'
    }

    repositories {
        google()
        jcenter()
        mavenLocal()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$gradleVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.14.0"
        // Add dependency
        classpath 'io.fabric.tools:gradle:1.29.0'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
    }
}

plugins {
    id "com.diffplug.gradle.spotless" version "3.13.0"
}

allprojects {
    apply plugin: 'com.github.hierynomus.license'
    repositories {
        google()
        jcenter()
        mavenCentral()
        mavenLocal()
        maven { url 'https://maven.fabric.io/public' }
    }

    license {
        header rootProject.file('LICENCE_HEADER')
        strictCheck true
        mapping('kt', 'SLASHSTAR_STYLE')
    }
}




spotless {
    kotlin {
        target "**/*.kt"
        ktlint(ktlintVersion)
    }
}
